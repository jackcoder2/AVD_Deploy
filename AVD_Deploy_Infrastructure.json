{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "rootDeploymentName": {
      "type": "string",
      "metadata": {
        "description": "The deployment name for this AVD hub infrastructure"
      }
    },
    "deploymentRegion": {
      "type": "string",
      "metadata": {
        "description": "The deployment region for this AVD hub infrastructure"
      }
    },
    "deploymentTimezone": {
      "type": "string",
      "metadata": {
        "description": "The deployment timezone for the AVD hub infrastructure, Pacific Standard Time, Mountain Standard Time, Central Standard Time, or Eastern Standard Time"
      }
    },
    "hubNetworkAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "This is the address space for the hub virtual network, provided as a CIDR (10.120.112.0/20). This address space should be a 255.255.248.0 or CIDR /21 or larger subnet."
      }
    },
    "dnsServers": {
      "type": "array",
      "metadata": {
        "description": "Specify all DNS servers for this deployment, should be specified as an array of IP Addresses, [\"10.120.116.4\",\"10.120.116.5\"], for example."
      }
    },
    "enableBastion": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable an Azure Bastion service on the hub to access virtual machines without a public IP address, this is a billable option."
      }
    },
    "enableManagementVM": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable a management virtual machine attached to the internal virtual network, this machine allows full access to any resource attached to the internal virtual network.  Access this machine through a public IP address, Bastion service or through the firewall, depending on your configuration.  This VM will automatically shutdown every night at 11:00 PM in the time zone specified. This VM is a billable option."
      }
    },
    "notificationEmail": {
      "type": "string",
      "metadata": {
        "description": "A e-mail address to send notification to"
      }
    },
    "domainType": {
      "type": "string",
      "allowedValues": [ "AzureAD", "Domain", "Local" ],
      "defaultValue": "AzureAD",
      "metadata": {
        "description": ""
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "domainJoinAdmin": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "metadata": {
        "description": ""
      }
    }
  },
  "variables": {
    "virtualNetworkResourceGroupName": "[concat(parameters('rootDeploymentName'), '-vnet-', parameters('deploymentRegion'), '-rg')]",
    "logAnalyticsResourceGroupName": "[concat(parameters('rootDeploymentName'), '-loganalytics-', parameters('deploymentRegion'), '-rg')]",
    "keyVaultResourceGroupName": "[concat(parameters('rootDeploymentName'), '-keyvault-', parameters('deploymentRegion'), '-rg')]",
    "automationResourceGroupName": "[concat(parameters('rootDeploymentName'), '-automation-', parameters('deploymentRegion'), '-rg')]",
    "recoveryVaultResourceGroupName": "[concat(parameters('rootDeploymentName'), '-recoveryvault-', parameters('deploymentRegion'), '-rg')]",
    "managementResourceGroupName": "[concat(parameters('rootDeploymentName'), '-management-', parameters('deploymentRegion'), '-rg')]"
  },
  "resources": [
    // --== Virtual Network ==--
    {
      "type": "Microsoft.Resources/resourceGroups",
      "name": "[variables('virtualNetworkResourceGroupName')]",
      "apiVersion": "2022-09-01",
      "location": "[parameters('deploymentRegion')]",
      "tags": {},
      "managedBy": "Someone"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "virtualNetworkDeployment",
      "apiVersion": "2022-09-01",
      "tags": {},
      "resourceGroup": "[variables('virtualNetworkResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "hubNetworkAddressSpace": {
            "value": "[parameters('hubNetworkAddressSpace')]"
          },
          "dnsServers": {
            "value": "[array(parameters('dnsServers'))]"
          },
          "enableBastion": {
            "value": "[parameters('enableBastion')]"
          }
        },
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'AVD_Deploy_Network.json')]",
          "contentVersion": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('virtualNetworkResourceGroupName'))]"
      ]
    },
    // --== LogAnalytics ==--
    {
      "type": "Microsoft.Resources/resourceGroups",
      "name": "[variables('logAnalyticsResourceGroupName')]",
      "apiVersion": "2022-09-01",
      "location": "[parameters('deploymentRegion')]",
      "tags": {},
      "managedBy": "Someone"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "logAnalyticsDeployment",
      "apiVersion": "2022-09-01",
      "tags": {},
      "resourceGroup": "[variables('logAnalyticsResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {},
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'AVD_Deploy_LogAnalytics.json')]",
          "contentVersion": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('logAnalyticsResourceGroupName'))]",
        "virtualNetworkDeployment"
      ]
    },
    // --== KeyVault ==--
    {
      "type": "Microsoft.Resources/resourceGroups",
      "name": "[variables('keyVaultResourceGroupName')]",
      "apiVersion": "2022-09-01",
      "location": "[parameters('deploymentRegion')]",
      "tags": {},
      "managedBy": "Someone"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "keyVaultDeployment",
      "apiVersion": "2022-09-01",
      "tags": {},
      "resourceGroup": "[variables('keyVaultResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkResourceID": {
            "value": "[reference('virtualNetworkDeployment').outputs.virtualNetworkResourceID.value]"
          }
        },
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'AVD_Deploy_KeyVault.json')]",
          "contentVersion": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('keyVaultResourceGroupName'))]",
        "virtualNetworkDeployment"
      ]
    },
    // --== Automation ==--
    {
      "type": "Microsoft.Resources/resourceGroups",
      "name": "[variables('automationResourceGroupName')]",
      "apiVersion": "2022-09-01",
      "location": "[parameters('deploymentRegion')]",
      "tags": {},
      "managedBy": "Someone"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "automationDeployment",
      "apiVersion": "2022-09-01",
      "tags": {},
      "resourceGroup": "[variables('automationResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkResourceID": {
            "value": "[reference('virtualNetworkDeployment').outputs.virtualNetworkResourceID.value]"
          },
          "subnetServicesResourceID": {
            "value": "[reference('virtualNetworkDeployment').outputs.subnetServicesResourceID.value]"
          },
          "logAnalyticsResourceID": {
            "value": "[reference('logAnalyticsDeployment').outputs.logAnalyticsResourceID.value]"
          },
          "logAnalyticsName": {
            "value": "[reference('logAnalyticsDeployment').outputs.logAnalyticsName.value]"
          }
        },
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'AVD_Deploy_Automation.json')]",
          "contentVersion": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('automationResourceGroupName'))]",
        "virtualNetworkDeployment",
        "logAnalyticsDeployment"
      ]
    },
    // --== Recovery Vault ==--
    {
      "type": "Microsoft.Resources/resourceGroups",
      "name": "[variables('recoveryVaultResourceGroupName')]",
      "apiVersion": "2022-09-01",
      "location": "[parameters('deploymentRegion')]",
      "tags": {},
      "managedBy": "Someone"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "recoveryVaultDeployment",
      "apiVersion": "2022-09-01",
      "tags": {},
      "resourceGroup": "[variables('recoveryVaultResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "virtualNetworkResourceID": {
            "value": "[reference('virtualNetworkDeployment').outputs.virtualNetworkResourceID.value]"
          },
          "subnetServicesResourceID": {
            "value": "[reference('virtualNetworkDeployment').outputs.subnetServicesResourceID.value]"
          }
        },
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'AVD_Deploy_RecoveryVault.json')]",
          "contentVersion": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('recoveryVaultResourceGroupName'))]",
        "virtualNetworkDeployment"
      ]
    },
    // --== Management VM ==--
    {
      "type": "Microsoft.Resources/resourceGroups",
      "name": "[variables('managementResourceGroupName')]",
      "apiVersion": "2022-09-01",
      "location": "[parameters('deploymentRegion')]",
      "tags": {},
      "managedBy": "Someone",
      "condition": "[parameters('enableManagementVM')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "managementVMDeployment",
      "apiVersion": "2022-09-01",
      "tags": {},
      "resourceGroup": "[variables('managementResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "domainType": {
            "value": "[parameters('domainType')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "domainJoinAdmin": {
            "value": "[parameters('domainJoinAdmin')]"
          },
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "notificationEmail": {
            "value": "[parameters('notificationEmail')]"
          },
          "deploymentTimezone": {
            "value": "[parameters('deploymentTimezone')]"
          },
          "subnetPlatformResourceID": {
            "value": "[reference('virtualNetworkDeployment').outputs.subnetPlatformResourceID.value]"
          },
          "keyVaultResourceGroupName": {
            "value": "[variables('keyVaultResourceGroupName')]"
          },
          "recoveryVaultResourceGroupName": {
            "value": "[variables('recoveryVaultResourceGroupName')]"
          },
          "keyVaultName": {
            "value": "[reference('keyVaultDeployment').outputs.keyVaultName.value]"
          },
          "recoverVaultName": {
            "value": "[reference('recoveryVaultDeployment').outputs.recoverVaultName.value]"
          }
        },
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'AVD_Deploy_ManagementVM.json')]",
          "contentVersion": "1.0.0.0"
        }
      },
      "condition": "[parameters('enableManagementVM')]",
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('managementResourceGroupName'))]",
        "virtualNetworkDeployment",
        "keyVaultDeployment",
        "automationDeployment",
        "recoveryVaultDeployment"
      ]
    }
  ],
  "outputs": {
  }
}