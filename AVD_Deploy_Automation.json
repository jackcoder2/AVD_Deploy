{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkResourceID": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "subnetServicesResourceID": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "logAnalyticsResourceID": {
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "logAnalyticsName": {
      "type": "string",
      "metadata": {
        "description": "Enable an Azure Firewall service on the hub to create public endpoints for services in the hub virtual network, this is a billable option."
      }
    }
  },
  "variables": {
    "DeploymentSpecificUniqueString": "[uniqueString(resourceGroup().id, subscription().tenantId)]",

    // --== Automation ==--
    "automationAccName": "[concat('automationAccount-', variables('DeploymentSpecificUniqueString'))]",
    "automationAccPrivateDNSName": "privatelink.azure-automation.net"
  },
  "resources": [
     // --== Automation Account Build ==--
    // Microsoft.Automation/automationAccounts
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2022-08-08",
      "name": "[variables('automationAccName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicNetworkAccess": false,
        "sku": {
          "name": "Basic"
        },
        "encryption": {
          "keySource": "Microsoft.Automation",
          "identity": {}
        }
      }
    },
    // Microsoft.Network/privateEndpoints
    {
        "type": "Microsoft.Network/privateEndpoints",
        "name": "[concat(variables('automationAccName'),'-private_endpoint')]",
        "apiVersion": "2022-07-01",            
        "location": "[resourceGroup().location]",
        "tags": {},
        "properties": {
            "subnet": {
                "id": "[parameters('subnetServicesResourceID')]" // "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetServicesName'))]"
            },
            "privateLinkServiceConnections": [
                {
                    "name": "[concat(variables('automationAccName'),'-private_endpoint')]",
                    "properties": {
                        "privateLinkServiceId": "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccName'))]",
                         "groupIds": [
                            "DSCAndHybridWorker"
                        ]
                    }
                }
            ],
            "customNetworkInterfaceName": "[concat(variables('automationAccName'),'-private_endpoint-nic')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccName'))]"
          ]
    },
    // Microsoft.Network/privateDnsZones
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[variables('automationAccPrivateDNSName')]",
      "location": "global",
      "properties": {}
    },
    // Microsoft.Network/privateDnsZones/virtualNetworkLinks
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('automationAccPrivateDNSName'), format('{0}-link', variables('automationAccPrivateDNSName')))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[parameters('virtualNetworkResourceID')]"  //resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('automationAccPrivateDNSName'))]"
      ]
    },
    // Microsoft.Network/privateEndpoints/privateDnsZoneGroups
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2022-07-01",
      "name": "[concat(variables('automationAccName'),'-private_endpoint/DNSGroupName')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "config1",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('automationAccPrivateDNSName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('automationAccPrivateDNSName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', concat(variables('automationAccName'),'-private_endpoint'))]"
      ]
    },
    // Microsoft.OperationalInsights/workspaces/linkedServices
    {
        "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
        "name": "[concat(parameters('logAnalyticsName'), '/Automation')]",
        "apiVersion": "2020-08-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "resourceId": "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccName'))]"
        },
        "dependsOn": [
            "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccName'))]"
        ]
    } //,
    // Microsoft.Automation/automationAccounts/providers/diagnosticSettings
/*     {
        "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings",
        "name": "[concat(variables('automationAccName'), '/', 'Microsoft.Insights/service')]",
        "apiVersion": "2021-05-01-preview",
        "location": "[resourceGroup().location]",
        "properties": {
            "workspaceId": "[parameters('logAnalyticsResourceID')]",  //  resourceId('microsoft.operationalinsights/workspaces', variables('logAnalyticsName'))
            "logs": [
                {
                    "category": "JobLogs",
                    "enabled": true
                },
                {
                    "category": "JobStreams",
                    "enabled": true
                },
                {
                    "category": "DscNodeStatus",
                    "enabled": true
                },
                {
                    "category": "AuditEvent",
                    "enabled": true
                }
            ],
            "metrics": [
                {
                    "category": "AllMetrics",
                    "enabled": true
                }
            ]
        },
        "dependsOn": [
            "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccName'))]"
        ]
    } */
    
/*
    // Microsoft.OperationalInsights/workspaces/configurationScopes
    {
        "type": "Microsoft.OperationalInsights/workspaces/configurationScopes",
        "name": "[concat(parameters('logAnalyticsName'), '/MicrosoftDefaultScopeConfigUpdates')]",
        "apiVersion": "2015-11-01-preview",
        "location": "[resourceGroup().location]",
        "kind": "SearchComputerGroup",
        "properties": {
            "Include": "[[\"Updates__MicrosoftDefaultComputerGroup\"]]"
        },
        "id": "[concat(subscription().id, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsName'), '/configurationScopes/MicrosoftDefaultScopeConfigUpdates')]", // "[concat(parameters('logAnalyticsResourceID'), '/configurationScopes/MicrosoftDefaultScopeConfigUpdates')]", // "[concat(parameters('logAnalyticsResourceID'), '/configurationScopes/MicrosoftDefaultScopeConfig-Updates')]",  //  /subscriptions/6b221c5d-c6a4-4852-bdc5-b5116abcd867/resourceGroups/AVDHub/providers/Microsoft.OperationalInsights/workspaces/logAnalytics-6jbubn4pofhx4/configurationScopes/MicrosoftDefaultScopeConfig-Updates
        "dependsOn": [
            "[parameters('logAnalyticsResourceID')]"
        ]
    },
    // Microsoft.OperationsManagement/solutions
    {
        "type": "Microsoft.OperationsManagement/solutions",
        "name": "[concat('Updates(', parameters('logAnalyticsName'), ')')]",
        "apiVersion": "2015-11-01-preview",
        "location": "[resourceGroup().location]",
        "plan": {
            "name": "[concat('Updates(', parameters('logAnalyticsName'), ')')]",
            "product": "OMSGallery/Updates",
            "promotionCode": "",
            "publisher": "Microsoft"
        },
        "properties": {
            "workspaceResourceId": "[parameters('logAnalyticsResourceID')]",
            "configurations": [
                {
                    "Name": "SolutionTargeting",
                    "Value": "MicrosoftDefaultScopeConfigUpdates"
                }
            ]
        },
        "id": "[concat(resourceGroup().id, '/providers/Microsoft.OperationsManagement/solutions/Updates(', parameters('logAnalyticsName'), ')')]", // "[Concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', resourceGroup().Name, '/providers/Microsoft.OperationsManagement/solutions/Updates(', variables('logAnalyticsName'), ')')]",
        "dependsOn": [
            "[parameters('logAnalyticsResourceID')]"
        ]
    }
*/

  ],
  "outputs": {
  }
}